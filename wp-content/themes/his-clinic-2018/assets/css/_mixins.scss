@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: woff otf eot ttf) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-display: swap;
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

@mixin backgroundImage($bigPath, $smallPath) {
	@media all and (min-width: 768px) {
		background-image: url($bigPath);
	}
	@media all and (max-width: 767px) {
		background-image: url($smallPath);
	}
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
}

@mixin gradient($color1, $color2) {
    background: #{$color1}; /* For browsers that do not support gradients */
    background: -webkit-linear-gradient(#{$color1}, #{$color2}); /* For Safari 5.1 to 6.0 */
    background: -o-linear-gradient(#{$color1}, #{$color2}); /* For Opera 11.1 to 12.0 */
    background: -moz-linear-gradient(#{$color1}, #{$color2}); /* For Firefox 3.6 to 15 */
    background: linear-gradient(#{$color1}, #{$color2}); /* Standard syntax */
}

@mixin clearUlLi() {
	padding-left: 0;
	margin: 0;
	li{
		list-style-type: none;
	}
}

@mixin resetAbsolute() {
	top: auto;
	bottom: auto;
	left: auto;
	right: auto;
	position: relative;
}


